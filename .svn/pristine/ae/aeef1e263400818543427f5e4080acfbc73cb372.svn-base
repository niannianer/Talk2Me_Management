import Vue from 'vue';
import store from '../store';
import {getQuery,checkEmail,login, register,checkClaim} from '../tools/operation';
import Router from 'vue-router';
Vue.use(Router);
import {setTitle} from '../tools/operation';
import {session} from '../tools/store';

let routes = [];

let beforeEach = ((to, from, next) => {
    let email = unescape(getQuery('email') || '');
    let password = unescape(getQuery('password') || '');
    let oldEmail = session.getItem('oldEmail');
    let fromOld = session.getItem('fromOld')
    // if(fromOld){
    //     authInfo = session.getItem('authInfoMerchant');
    // }else{
    //     authInfo = session.getItem('authInfo');
    // }
    if(oldEmail != email && email){
        session.setItem('email',email)
        session.setItem('fromOld',true)
        console.log('检查email');
        checkEmail(email,password).then(res => {
            console.log('res  ' + JSON.stringify(res));
            if(res.status == 1){
                login(email,password).then(()=>{
                    checkClaim().then((res)=>{
                        if(res.isClaimed){
                            next({path: '/management/merchant/no-claim'})
                        }else{
                            next();
                        }
                    })
                });
            }else if(res.status == 0) {
                register(email,password).then(res=>{
                    login(email,password).then(()=>{
                        checkClaim().then((res)=>{
                            if(res.isClaimed){
                                next({path: '/management/merchant/no-claim'})
                            }else{
                                next();
                            }
                        })
                    });
                }).catch(error=>{
                    console.log('register error')
                });
            }
        });
        return false;
    }else if(fromOld){
        next();
        return false;
    }
    let authInfo = session.getItem('authInfo');
    if(to.path == '/management/login' || to.path == '/management/register' || to.path == '/management/reset-password'){
        next()
    }else {
        if (authInfo) {
            next()
        } else {
            session.setItem('logoutUrl', encodeURIComponent(window.location.href));
            window.location.href = '/management/login';
        }
    }
});

import userRoutes from './merchant.js';
import managementRoutes from './management.js';

routes = routes.concat(managementRoutes).concat(userRoutes);

routes.map(route => {
    route.path = `/management${route.path}`;
    route.beforeEnter = (to, from, next) => {
        let {meta} = to;
        let {title} = meta;
        setTitle(title);
        if (!route.meta.login) {
            if (route.children) {
                next();
            }else{
                return beforeEach(to, from, next);
            }

        } else {
            next();
        }
    };
    if (route.children) {
        route.children.map(child => {
            child.beforeEnter = (to, from, next) => {
                let {meta} = to;
                let {title} = meta;
                setTitle(title);
                if (!child.meta.login) {
                    return beforeEach(to, from, next);
                } else {
                    next();
                }
            };
        });
    }

});
routes.push({
    path: '*',
    redirect: '/management/login'
});

export default new Router({
    mode: 'history',
    routes
})
<template>
    <div class="keyword-edit" flex="dir:top">
        <div class="mert-edit-form">
            <div flex="box:mean" class="form-item">
                <div flex>
                    <label class="item-label">服务商名称</label>
                    <el-autocomplete
                            v-model="info.merchantName"
                            :fetch-suggestions="querySearchAsync"
                            placeholder="请输入服务商名称"
                            @select="handleSelect"
                    ></el-autocomplete>
                </div>
            </div>
            <div flex="box:mean" class="form-item">
                <div flex>
                    <label class="item-label">关键字</label>
                    <el-input v-model="info.keywords" placeholder="请输入关键字，多个用逗号隔开" :disabled="showAudit"></el-input>
                </div>
                <div flex>
                    <label class="item-label">费用</label>
                    <el-input v-model="info.expenses" placeholder="费用" :disabled="showAudit"></el-input>
                </div>
            </div>
            <div flex="box:mean" class="form-item">
                <div flex>
                    <label class="item-label">购买人</label>
                    <el-input v-model="info.purchaseName" placeholder="购买人" :disabled="showAudit"></el-input>
                </div>
                <div flex>
                    <label class="item-label">联系方式</label>
                    <el-input v-model="info.phoneNumber" placeholder="联系方式" :disabled="showAudit"></el-input>
                </div>
            </div>
            <div flex="box:mean" class="form-item">
                <div flex>
                    <label class="item-label">购买日期</label>
                    <el-date-picker v-model="info.purchaseDate" type="date" placeholder="选择日期" value-format="timestamp"></el-date-picker>
                </div>
                <!--<div flex>-->
                    <!--<label class="item-label">状态</label>-->
                    <!--<el-select v-model="info.status" placeholder="状态">-->
                        <!--<el-option :label="item.nameZH"-->
                                   <!--:value="item.value"-->
                                   <!--v-for="item,index in comDatas.infoStatus">-->
                        <!--</el-option>-->
                    <!--</el-select>-->
                <!--</div>-->
            </div>
            <div flex="box:mean" class="form-item">
                <div flex>
                    <label class="item-label"><span>服务日期</span></label>
                    <el-date-picker
                            v-model="date"
                            type="daterange"
                            range-separator="至"
                            start-placeholder="开始日期"
                            end-placeholder="结束日期"
                            unlink-panels
                            value-format="timestamp">
                    </el-date-picker>
                </div>
            </div>
            <div flex="main:center" class="form-item" >
                <el-button type="primary" @click.stop="save">保存</el-button>
            </div>
        </div>
    </div>
</template>

<script>
    import $api from '../../Common/tools/api.js';
    import comDatas from '../../Common/tools/comDatas';
    import {mapState} from 'vuex';
    import '../less/keyword-edit.less';
    export default {
        name: 'keyword-edit',
        data(){
            return {
                comDatas,
                loading: false,
                info: {
                    merchantid: '',
                    keywords: '',
                    status: 1,
                    expenses: '',
                    purchaseDate: '',
                    startDate: '',
                    endDate: '',
                    purchaseName: '',
                    phoneNumber: '',
                    userId: '',
                },
                date: '',
                merchants:[],
                resm: /^1(3|4|5|6|7|8)\d{9}$/,//手机号码正则
                resc:  /^0\d{2,3}-?\d{7,8}$/,//电话号码正则
                //可编辑
                showAudit:false,
            }
        },
        created(){
            let query = this.$route.query;
            this.mId = query.mId || '';
            this.type = query.type;
            if(this.type == 'audit'){
                this.getInfo();
            }
        },
        components: {},
        computed: {
            ...mapState(['userEmail'])
        },
        methods: {
            //获取商家缴费信息
            getInfo(){
                $api.get('/secure/manage/keywords/query/id',{id: this.mId}).then( res => {
                    if(res.status == 1){
                        this.info = res.content;
                        this.date = [res.content.startDate,res.content.endDate];
                        this.info.id = res.content.id;
                        console.log(res)
                    }

                })
            },
            //提交
            save(){
                if (!this.info.merchantName){
                    this.$message.warning('请输入商家名称');
                    return false
                }
                if (!this.info.keywords){
                    this.$message.warning('请输入关键字');
                    return false
                }else {
                    this.info.keywords = this.info.keywords.replace('，',',');
                }
                if (!this.info.expenses){
                    this.$message.warning('请输入费用');
                    return false
                }
                if (!this.info.purchaseName){
                    this.$message.warning('请输入购买人');
                    return false
                }
                if(this.info.phoneNumber){
                    if(!this.resm.test(this.info.phoneNumber) && !this.resc.test(this.info.phoneNumber)){
                        this.$message.warning('请输入正确的联系方式');
                        return false
                    }
                }else {
                    this.$message.warning('请输入联系方式');
                    return false
                }
                if (!this.info.purchaseDate){
                    this.$message.warning('请选择购买日期');
                    return false
                }
                if(this.date){
                    this.info.startDate = this.date[0].toString();
                    this.info.endDate = this.date[1].toString();
                }else {
                    this.$message.warning('请选择服务日期');
                    return false
                }
                this.info.userId = this.userEmail;
                this.info.purchaseDate = this.info.purchaseDate.toString();
                console.log('info    ' + JSON.stringify(this.info));
                $api.post('/secure/manage/keywords/save',this.info).then(res => {
                    if (res.status == 1){
                        this.$message.success('保存成功');
                        this.$router.push('/management/menus/keyword-manage')
                    }else {
                        this.$message.error('保存失败')
                    }
                })
            },
            //获取服务商名称
            querySearchAsync(query, cb) {
                $api.get('/secure/merchant/simplelist/query/merchantname',{merchantname:query}).then(res => {
                    this.loading = false;
                    if(res.status == 1){
                        this.merchants = res.content.map(item => {
                            return {
                                label:item.merchantId,
                                value:item.merchantName,
                            }
                        });
                        cb(this.merchants);
                    }
                });
                // clearTimeout(this.timeout);
                // this.timeout = setTimeout(() => {
                //     cb(this.merchants);
                // }, 1000 * Math.random());
            },
            handleSelect(item) {
                this.info.merchantName = item.value;
                this.info.merchantid = item.label;
            }
        },
        mounted() {
        },
        destroyed(){

        }
    }
</script>
